/*
 * TacOS Source Code
 *    Tokuyama kousen Advanced educational Computer.
 *
 * Copyright (C) 2011 - 2018 by
 *                      Dept. of Computer Science and Electronic Engineering,
 *                      Tokuyama College of Technology, JAPAN
 *
 *   上記著作権者は，Free Software Foundation によって公開されている GNU 一般公
 * 衆利用許諾契約書バージョン２に記述されている条件を満たす場合に限り，本ソース
 * コード(本ソースコードを改変したものを含む．以下同様)を使用・複製・改変・再配
 * 布することを無償で許諾する．
 *
 *   本ソースコードは＊全くの無保証＊で提供されるものである。上記著作権者および
 * 関連機関・個人は本ソースコードに関して，その適用可能性も含めて，いかなる保証
 * も行わない．また，本ソースコードの利用により直接的または間接的に生じたいかな
 * る損害に関しても，その責任を負わない．
 *
 *
 */

/*
 * kernel/init.cmm : 初期化プロセス(INIT)
 *
 * 2018.01.27 : インクルードファイルの拡張子を .h から .hmm に変更
 * 2016.01.08 : /shell ではなく /bin/shell を起動するように変更
 *              起動できない時はエラーメッセージを表示するように変更
 * 2015.09.06 : デバッグルーチンとコメントを削除(重村)
 * 2015.09.02 : ソースコードを清書(重村)
 * 2015.08.20 : ファイル名変更(usrInit -> init)
 * 2015.06.22 : アイドルループをIDLEプロセスに移植、シェルを生成するように変更
 * 2014.08.31 : ユーザプロセス生成後にアイドルループを実行するように変更
 * 2014.05.08 : 村田開発開始
 * 2011.05.20 : 新規作成
 *
 * $Id$
 *
 */

#include <tty.hmm>
#include <pm.hmm>
int[] sta = array(1);                           // ステータス格納領域の確保

public void initMain() {
  while (true) {
    int pid = exec("/bin/shell.exe", null, null);// シェルプロセスを生成する
    if (pid<0) ttyWrite("Shell doesn't start\n", 20);// シェルが生成できなかった
    while (wait(sta)!=pid)                      // 親のないプロセスの終了待ち
      ;                                         // もしもシェルが終了したら
  }                                             //   ループして再度起動
}
